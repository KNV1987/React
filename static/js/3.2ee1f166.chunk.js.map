{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","c","item","src","itemDiv","mesage","like","MyPosts","memo","post","posts","map","p","key","id","myPosts","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength15","maxLengthCreater","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","btnPost","MyPostsContainer","profilePage","dispatch","createAddPost","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatuWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileDataFormRedaxForm","profile","error","style","formSummaryError","Input","type","keys","contacts","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ContactTitle","ContactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","divProf","photos","large","usersPhoto","avaProf","target","files","initialValues","formData","then","Profile","content","ProfileContainer","userId","match","params","autorizedUserId","history","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.2ee1f166.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__3dA4l\",\"divProf\":\"ProfileInfo_divProf__3Vfwx\",\"avaProf\":\"ProfileInfo_avaProf__11Uuf\",\"contact\":\"ProfileInfo_contact__3IRVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1WYmH\",\"btnPost\":\"MyPosts_btnPost__3nQgt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__kCbgo\",\"itemDiv\":\"Post_itemDiv__dVxTa\"};","import React from \"react\";\r\nimport c from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n\r\n      <div className={c.item}>\r\n        <img src=\"https://whatsism.com/uploads/posts/2018-07/1530546770_rmk_vdjbx10.jpg\"/>\r\n        <div className={c.itemDiv}>\r\n          <div>{props.mesage}</div>\r\n          <div>like {props.like}</div>\r\n        </div> \r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\nimport { maxLengthCreater, required } from \"../../utils/validators\";\r\nimport c from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let post = props.posts.map(p => <Post mesage={p.post} key={p.id} like={p.like} />);\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={c.myPosts}>\r\n      <h3>My post</h3>\r\n      <div>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      </div>\r\n      { post}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength15 = maxLengthCreater(15);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field component={Textarea}\r\n        name='newPostText'\r\n        placeholder='Add post'\r\n        validate={[required, maxLength15]} />\r\n    </div>\r\n    <div className={c.btnPost}>\r\n      <button >Add Post</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n  form: 'ProfileAddNewPostForm'\r\n})(AddNewPostForm)\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createAddPost, createUpdateNewPost } from \"../../../redax/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet myDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(createAddPost(newPostText));\r\n    },\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, myDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport c from \"./ProfileInfo.module.css\";\r\n\r\n\r\nconst ProfileStatuWithHooks = (props) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n        <div>\r\n          <b>Status: </b><span onDoubleClick={activateEditMode} >{props.status || 'No status'} </span>\r\n        </div>\r\n      }\r\n      {\r\n        editMode &&\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n            value={status} />\r\n        </div>\r\n      }\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default ProfileStatuWithHooks;\r\n","import React from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport c from \"./ProfileInfo.module.css\";\r\nimport { Input, Textarea } from \"../../Common/FormsControls/FormsControls\"\r\nimport style from \"../../Common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className={style.formSummaryError}>{error} </div>}\r\n        <div>\r\n            <b>Full name: </b> <Field placeholder={'Full name'} name={'fullName'} component={Input} />\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b>\r\n            <Field type={'checkbox'} name={'lookingForAJob'} component={Input} />\r\n        </div>\r\n        <div>\r\n            <b>My professional skills: </b>\r\n            <Field placeholder={'Professional skills'} name={'lookingForAJobDescription'} component={Textarea} />\r\n        </div>\r\n\r\n        <div>\r\n            <b>About my: </b>\r\n            <Field placeholder={'About me'} name={'aboutMe'} component={Input} />\r\n        </div>\r\n\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                return <div className={c.contact} >\r\n                    <b>{key}: <Field placeholder={key} name={'contacts.' + key} component={Input} validate={[]} /></b>\r\n                </div>\r\n            })}\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\n\r\nconst ProfileDataFormRedaxForm = reduxForm({\r\n    form: 'edit-profile'\r\n})(ProfileDataForm)\r\nexport default ProfileDataFormRedaxForm","import React, { useState } from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport c from \"./ProfileInfo.module.css\";\r\nimport ProfileStatuWithHooks from \"./ProfileStatusWithHooks\";\r\nimport usersPhoto from '../../../assets/imeges/user.png'\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData)\r\n      .then(() => {\r\n        setEditMode(false);\r\n      })\r\n\r\n  }\r\n  return (\r\n    <div className={c.divProf}>\r\n      <img src={profile.photos.large || usersPhoto} className={c.avaProf} />\r\n      {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n      {editMode ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} /> :\r\n        <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)} />}\r\n\r\n      <ProfileStatuWithHooks status={status} updateStatus={updateStatus} />\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return <div>\r\n    {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n    <div>\r\n      <b>Full name: </b> {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job: </b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n      <div>\r\n        <b>Professional skills: </b> {profile.lookingForAJobDescription}\r\n      </div>\r\n    }\r\n    <div>\r\n      <b>About me: </b> {profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} ContactTitle={key} ContactValue={profile.contacts[key]} />\r\n      })}\r\n    </div>\r\n\r\n  </div>\r\n}\r\n\r\nconst Contact = ({ ContactTitle, ContactValue }) => {\r\n  return <div className={c.contact}><b>{ContactTitle}: </b> {ContactValue}</div>\r\n}\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport c from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div className={c.content}>\r\n      < ProfileInfo profile={props.profile} \r\n      savePhoto={props.savePhoto} \r\n      isOwner={props.isOwner} \r\n      saveProfile={props.saveProfile}\r\n      status={props.status} \r\n      updateStatus={props.updateStatus} />\r\n      < MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","\r\nimport React from \"react\";\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../redax/profile-reducer\";\r\nimport { connect } from 'react-redux';\r\nimport Profile from \"./Profile\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId)\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      < Profile {...this.props} isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        savePhoto={this.props.savePhoto}\r\n        updateStatus={this.props.updateStatus}\r\n        saveProfile={this.props.saveProfile} />\r\n    );\r\n  };\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}